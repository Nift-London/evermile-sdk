<?php
/**
 * QuoteMultiRoutePostRequestParamsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Evermile Commercial Quotes and Booking API
 *
 * This is Evermile's commercial API for handling delivery quotes and orders
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@evermile.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.7.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * QuoteMultiRoutePostRequestParamsTest Class Doc Comment
 *
 * @category    Class
 * @description Parameters for a multi-route quote request
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class QuoteMultiRoutePostRequestParamsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "QuoteMultiRoutePostRequestParams"
     */
    public function testQuoteMultiRoutePostRequestParams()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "proposal_types"
     */
    public function testPropertyProposalTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exclude_carriers"
     */
    public function testPropertyExcludeCarriers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "excluded_vehicle_types"
     */
    public function testPropertyExcludedVehicleTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "earliest_pickup_start_time"
     */
    public function testPropertyEarliestPickupStartTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "latest_pickup_end_time"
     */
    public function testPropertyLatestPickupEndTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "earliest_dropoff_start_time"
     */
    public function testPropertyEarliestDropoffStartTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "latest_dropoff_end_time"
     */
    public function testPropertyLatestDropoffEndTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "optimize_tasks_order"
     */
    public function testPropertyOptimizeTasksOrder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "optimization_params"
     */
    public function testPropertyOptimizationParams()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
