<?php
/**
 * QuoteMultiRoutePostRequestParamsOptimizationParamsInnerTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Evermile Commercial Quotes and Booking API
 *
 * This is Evermile's commercial API for handling delivery quotes and orders
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@evermile.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.7.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * QuoteMultiRoutePostRequestParamsOptimizationParamsInnerTest Class Doc Comment
 *
 * @category    Class
 * @description Optimization configuration overrides for multi-drop
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class QuoteMultiRoutePostRequestParamsOptimizationParamsInnerTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "QuoteMultiRoutePostRequestParamsOptimizationParamsInner"
     */
    public function testQuoteMultiRoutePostRequestParamsOptimizationParamsInner()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "carrier"
     */
    public function testPropertyCarrier()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "number_of_drivers"
     */
    public function testPropertyNumberOfDrivers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_number_of_stops"
     */
    public function testPropertyMaxNumberOfStops()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_number_of_parcels"
     */
    public function testPropertyMaxNumberOfParcels()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_route_length_minutes"
     */
    public function testPropertyMaxRouteLengthMinutes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "override_pickup_start_hour"
     */
    public function testPropertyOverridePickupStartHour()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pickup_window_length_minutes"
     */
    public function testPropertyPickupWindowLengthMinutes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "drivers_schedule"
     */
    public function testPropertyDriversSchedule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disabled_slot_groups"
     */
    public function testPropertyDisabledSlotGroups()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
